import pygame
import random

pygame.init()
clock = pygame.time.Clock()

# Define resolution
display_height = 620
display_width = 1180
main_screen = pygame.display.set_mode((1180, 620))
pygame.display.set_caption('Efekt Stroopa')


# Define colors as variables
black = (0, 0, 0)
white = (255, 255, 255)
yellow = (0, 255, 255)
red = (255, 0, 0)
dark_red = (153, 0, 0)
blue = (0, 0, 255)
dark_blue = (0, 0, 153)
green = (0, 255, 0)
dark_green = (0, 153, 0)
light_grey = (211, 211, 211)
dark_grey = (140, 140, 140)

lista_kolorów = [black, white, red, dark_red, blue, dark_blue, green, dark_green]
colors_list = [red, blue, green, yellow]
lista_słów = ["czerwony", "żółty", "zielony", "niebieski"]
slownik = {"czerwony": red, "żółty": yellow, "zielony":green, "niebieski":blue}


# Define text objects
kolor = black
def text_objects(text, font):
    TextSurf = font.render(text, True, kolor)
    return TextSurf, TextSurf.get_rect()


# Game intro
#MARTA
def intro_screen():
    intro = True

    while intro:
        for event in pygame.event.get():
            print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        main_screen.fill(white)
        title_text = pygame.font.Font("AutourOne-Regular.otf", 115)
        TextSurf, TextRect = text_objects('Efekt Stroopa', title_text)
        TextRect.center = ((display_width / 2), (display_height / 5))
        main_screen.blit(TextSurf, TextRect)

        graj_jako_eksperyment = pygame.draw.rect(main_screen, dark_green, (190, 220, 800, 60))
        graj_dla_rozrywki = pygame.draw.rect(main_screen, dark_green, (190, 300, 800, 60))
        informacja_o_eksperymencie = pygame.draw.rect(main_screen, dark_green, (190, 380, 800, 60))
        lista_wyników = pygame.draw.rect(main_screen, dark_green, (190, 460, 800, 60))

        mouse = pygame.mouse.get_pos()
        click = pygame.mouse.get_pressed()
        print(click)
        action = None

        #Interakcja przycisku 1

        if 190 + 800 > mouse[0] > 190 and 220 + 60 > mouse[1] > 220:
            pygame.draw.rect(main_screen, green, (190, 220, 800, 60))
            if click[0] == 1:
                pregame_screen()
        else:
            pygame.draw.rect(main_screen, dark_green, (190, 220, 800, 60))

        button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
        textSurf, textRect = text_objects(("Graj jako eksperyment"), button_description)
        textRect.center = ((190 + (800 / 2)), (220 + (60 / 2)))
        main_screen.blit(textSurf, textRect)



        #Interakcja przycisku 2
        if 190 + 800 > mouse[0] > 190 and 300 + 60 > mouse[1] > 300:
            pygame.draw.rect(main_screen, green, (190, 300, 800, 60))
        else:
            pygame.draw.rect(main_screen, dark_green, (190, 300, 800, 60))

        button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
        textSurf, textRect = text_objects(("Graj dla rozrywki"), button_description)
        textRect.center = ((190 + (800 / 2)), (300 + (60 / 2)))
        main_screen.blit(textSurf, textRect)



        #Interakcja przycisku 3
        if 190 + 800 > mouse[0] > 190 and 380 + 60 > mouse[1] > 380:
            pygame.draw.rect(main_screen, green, (190, 380, 800, 60))
            if click[0] == 1:
                informacje_screen()
        else:
            pygame.draw.rect(main_screen, dark_green, (190, 380, 800, 60))

        button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
        textSurf, textRect = text_objects(("Informacje o eksperymencie"), button_description)
        textRect.center = ((190 + (800 / 2)), (380 + (60 / 2)))
        main_screen.blit(textSurf, textRect)



        #Interakcja przycisku 4
        if 190 + 800 > mouse[0] > 190 and 460 + 60 > mouse[1] > 460:
            pygame.draw.rect(main_screen, green, (190, 460, 800, 60))
            if click[0]==1:
                wyswietlanie_tabeli()
        else:
            pygame.draw.rect(main_screen, dark_green, (190, 460, 800, 60))

        button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
        textSurf, textRect = text_objects(("Tabela wyników"), button_description)
        textRect.center = ((190 + (800 / 2)), (460 + (60 / 2)))
        main_screen.blit(textSurf, textRect)


        pygame.display.update()



#okno gry

#MARTA
def pregame_screen():
    run = True
    while run:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            else:
                main_screen.fill(white)
                title_text = pygame.font.Font("AutourOne-Regular.otf", 50)
                TextSurf, TextRect = text_objects('Instrukcje', title_text)
                TextRect.center = ((display_width / 2), (display_height / 5))
                main_screen.blit(TextSurf, TextRect)

                instructions_text = pygame.font.Font("AutourOne-Regular.otf", 20)
                TextSurf, TextRect = text_objects('Zobaczysz na ekranie wyraz i cztery przyciski,', instructions_text)
                TextRect.center = ((display_width / 2), 200)
                main_screen.blit(TextSurf, TextRect)

                instructions_text = pygame.font.Font("AutourOne-Regular.otf", 20)
                TextSurf, TextRect = text_objects("Twoim zadaniem jest nacisnąć przycisk odpowiadający kolorowi czcionki widocznego wyrazu.", instructions_text)
                TextRect.center = ((display_width / 2), 230)
                main_screen.blit(TextSurf, TextRect)

                instructions_text = pygame.font.Font("AutourOne-Regular.otf", 20)
                TextSurf, TextRect = text_objects('Pamiętaj, liczy się NIE znaczenie wyrazu, a TYLKO kolor czcionki. Powodzenia!', instructions_text)
                TextRect.center = ((display_width / 2), 260)
                main_screen.blit(TextSurf, TextRect)

                graj = pygame.draw.rect(main_screen, dark_green, (540, 380, 100, 60))
                mouse = pygame.mouse.get_pos()
                click = pygame.mouse.get_pressed()

                if 540 + 100 > mouse[0] > 540 and 380 + 60 > mouse[1] > 380:
                    pygame.draw.rect(main_screen, green, (540, 380, 100, 60))
                    if click[0] == 1:
                        game_screen()
                else:
                    pygame.draw.rect(main_screen, dark_green, (540, 380, 100, 60))

                button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
                textSurf, textRect = text_objects(("Graj"), button_description)
                textRect.center = ((540 + (100 / 2)), (380 + (60 / 2)))
                main_screen.blit(textSurf, textRect)

        pygame.display.update()


#okno gry
#KINGA
def game_screen():
    run = True
    slowo = random.choice(lista_słów)
    kolor = random.choice(colors_list)
    def text_objectsG(text, font):
        TextSurfG = font.render(text, True, kolor)
        return TextSurfG, TextSurfG.get_rect()

    while run:
        for event in pygame.event.get():
            print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()



        main_screen.fill(white)
        title_text = pygame.font.Font("AutourOne-Regular.otf", 115)
        TextSurfG, TextRect = text_objectsG(slowo, title_text)
        TextRect.center = ((display_width / 2), (display_height / 5))
        main_screen.blit(TextSurfG, TextRect)

        zielony = pygame.draw.rect(main_screen, dark_grey, (250, 350, 300, 80))
        żółty = pygame.draw.rect(main_screen, dark_grey, (250, 500, 300, 80))
        czerwony = pygame.draw.rect(main_screen, dark_grey, (630, 350, 300, 80))
        niebieski = pygame.draw.rect(main_screen, dark_grey, (630, 500, 300, 80))

        mouse = pygame.mouse.get_pos()

        # pierwszy przycisk o nazwie zielony
        if 250 + 300 > mouse[0] > 250 and 350 + 80 > mouse[1] > 350:
            pygame.draw.rect(main_screen, light_grey, (250, 350, 300, 80))
        else:
            pygame.draw.rect(main_screen, dark_grey, (250, 350, 300, 80))

        button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
        textSurf, textRect = text_objects(("zielony"), button_description)
        textRect.center = ((250 + (300 / 2)), (350 + (80 / 2)))
        main_screen.blit(textSurf, textRect)

        # drugi przycisk o nazwie żółty
        if 250 + 300 > mouse[0] > 190 and 500 + 80 > mouse[1] > 500:
            pygame.draw.rect(main_screen, light_grey, (250, 500, 300, 80))
        else:
            pygame.draw.rect(main_screen, dark_grey, (250, 500, 300, 80))

        button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
        textSurf, textRect = text_objects(("żółty"), button_description)
        textRect.center = ((250 + (300 / 2)), (500 + (80 / 2)))
        main_screen.blit(textSurf, textRect)

        # trzeci przycisk o nazwie czerwony
        if 630 + 300 > mouse[0] > 630 and 350 + 80 > mouse[1] > 350:
            pygame.draw.rect(main_screen, light_grey, (630, 350, 300, 80))
        else:
            pygame.draw.rect(main_screen, dark_grey, (630, 350, 300, 80))

        button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
        textSurf, textRect = text_objects(("czerwony"), button_description)
        textRect.center = ((630 + (300 / 2)), (350 + (80 / 2)))
        main_screen.blit(textSurf, textRect)

        # czwarty przycisk o nazwie niebieski
        if 630 + 300 > mouse[0] > 630 and 500 + 80 > mouse[1] > 500:
            pygame.draw.rect(main_screen, light_grey, (630, 500, 300, 80))
        else:
            pygame.draw.rect(main_screen, dark_grey, (630, 500, 300, 80))

        button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
        textSurf, textRect = text_objects(("niebieski"), button_description)
        textRect.center = ((630 + (300 / 2)), (500 + (80 / 2)))
        main_screen.blit(textSurf, textRect)


        pygame.display.update()







#Tabela wyników
#PAULINA
X = 350
Y = 265
Z = 600
czcionka = "AutourOne-Regular.otf"

class Wynik:
    def __init__(self, nazwa_uzytkownika, czas):
        self.nazwa_uzytkownika = nazwa_uzytkownika
        self.czas = czas
        self.font = pygame.font.Font(czcionka, 24)  # import pandas as pd
        self.pole_uzytkownik = self.font.render(nazwa_uzytkownika, True, black, dark_green)
        self.uzytkownikRect = self.pole_uzytkownik.get_rect()
        self.font = pygame.font.Font(czcionka, 24)
        self.pole_czas = self.font.render(str(czas), True, black, dark_green)
        self.czasRect = self.pole_czas.get_rect()
        moja_tabela.dodaj_wynik(self)

    def zapisz_wynik(nazwa_uzytkownika, czas):
        plik = open("wyniki.txt", "a")
        plik.write("\n" + nazwa_uzytkownika + " " + czas)
        plik.close()


class Tabela:
    tabela_wynikow = []

    def dodaj_wynik(self, wynik):
        self.tabela_wynikow.append(wynik)

    def wczytaj_wyniki(self):
        plik = open('wyniki.txt')
        tabela_wejscie = plik.readlines()
        plik.close()

        for i in tabela_wejscie:
            i = i.split()
            Wynik(i[0], int(i[1]))
        self.tabela_wynikow = sorted(self.tabela_wynikow, key=lambda i: i.czas)

moja_tabela = Tabela()
moja_tabela.wczytaj_wyniki()

def wyswietlanie_tabeli():
    while True:
        main_screen.fill(white)
        odstep = 0
        font = pygame.font.Font(czcionka, 30)
        tekst_nazwa = font.render("Nazwa użytkownika", True, black)
        main_screen.blit(tekst_nazwa, (200, 200))
        tekst_czas = font.render("Czas [s]", True, black)
        main_screen.blit(tekst_czas, (750, 200))
        pygame.draw.line(main_screen, black, (150, 190), (1000, 190))

        for wynik in moja_tabela.tabela_wynikow[:5]:
            wynik.uzytkownikRect.center = (X, Y + odstep)
            odstep += 50
            main_screen.blit(wynik.pole_uzytkownik, wynik.uzytkownikRect)
            pygame.draw.line(main_screen, black, (150, 190 + odstep), (1000, 190 + odstep))
        pygame.draw.line(main_screen, black, (150, 240 + (50 * min(5, len(moja_tabela.tabela_wynikow)))),
                         (1000, 240 + (50 * min(5, len(moja_tabela.tabela_wynikow)))))
        pygame.draw.line(main_screen, black, (150, 190),
                         (150, 240 + (50 * min(5, len(moja_tabela.tabela_wynikow)))))
        pygame.draw.line(main_screen, black, (1000, 190),
                         (1000, 240 + (50 * min(5, len(moja_tabela.tabela_wynikow)))))
        pygame.draw.line(main_screen, black, (600, 190),
                         (600, 240 + (50 * min(5, len(moja_tabela.tabela_wynikow)))))

        odstep2 = 0
        for wynik in moja_tabela.tabela_wynikow[:5]:
            wynik.czasRect.center = (X + 450, Y + odstep2)
            odstep2 += 50
            main_screen.blit(wynik.pole_czas, wynik.czasRect)

        czcionka_napis_glowny = pygame.font.Font(czcionka, 130)
        napis_glowny = czcionka_napis_glowny.render("Rekordy", True, black)
        main_screen.blit(napis_glowny, (270, 25))

        myszka = pygame.mouse.get_pos()
        click = pygame.mouse.get_pressed()

        if 180 + 800 > myszka[0] > 180 and 500 + 60 > myszka[1] > 500:
            pygame.draw.rect(main_screen, green, (180, 500, 800, 60))
            if click[0]==1:
                intro_screen()
        else:
            pygame.draw.rect(main_screen, dark_green, (180, 500, 800, 60))

        czcionka_wroc = pygame.font.Font(czcionka, 30)
        napis_wroc = czcionka_wroc.render("Wróć do menu", True, black)
        main_screen.blit(napis_wroc, (460, 510))

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            pygame.display.update()


def informacje_screen():
    run = True
    while run:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            else:
                main_screen.fill(white)
                title_text = pygame.font.Font("AutourOne-Regular.otf", 50)
                TextSurf, TextRect = text_objects('Informacje o eksperymencie', title_text)
                TextRect.center = ((display_width / 2), (display_height / 5))
                main_screen.blit(TextSurf, TextRect)


                main_screen.fill(light_grey)
                title_text = pygame.font.Font("AutourOne-Regular.otf", 50)
                TextSurf, TextRect = text_objects("Informacje o efekcie Stroopa", title_text)
                TextRect.center = ((display_width / 2), (display_height / 10))
                main_screen.blit(TextSurf, TextRect)


                instructions_text = pygame.font.Font("AutourOne-Regular.otf", 15)
                TextSurf, TextRect = text_objects('Efekt ten został odkryty przez amerykańskiego psychologa Johna Ridleya Stroopa w 1935 roku.', instructions_text)
                TextRect.center = ((display_width / 2), 200)
                main_screen.blit(TextSurf, TextRect)

                instructions_text = pygame.font.Font("AutourOne-Regular.otf", 15)
                TextSurf, TextRect = text_objects("Publikacja Stroopa jest jedną z najczęściej cytowanych prac z dziedziny psychologii doświadczalnej", instructions_text)
                TextRect.center = ((display_width / 2), 240)
                main_screen.blit(TextSurf, TextRect)

                instructions_text = pygame.font.Font("AutourOne-Regular.otf", 15)
                TextSurf, TextRect = text_objects('Efekt Stroopa jest demonstracją czasu reakcji na zadanie. Przykładem jest określanie koloru tekstu.', instructions_text)
                TextRect.center = ((display_width / 2), 280)
                main_screen.blit(TextSurf, TextRect)

                instructions_text = pygame.font.Font("AutourOne-Regular.otf", 15)
                TextSurf, TextRect = text_objects("Gdy kolor tekstu i tekst nie są zgodne (np. słowo „żółty” napisane czerwoną czcionką), człowiek poproszony", instructions_text)
                TextRect.center = ((display_width / 2), 320)
                main_screen.blit(TextSurf, TextRect)

                instructions_text = pygame.font.Font("AutourOne-Regular.otf", 15)
                TextSurf, TextRect = text_objects("o określenie koloru tekstu zrobi to wolniej i z większym prawdopodobieństwem błędu, niż gdyby tekst i jego kolor były zgodne.", instructions_text)
                TextRect.center = ((display_width / 2), 340)
                main_screen.blit(TextSurf, TextRect)

                instructions_text = pygame.font.Font("AutourOne-Regular.otf", 11)
                TextSurf, TextRect = text_objects("źródło: pl.wikipedia.org/wiki/Efekt_Stroopa", instructions_text)
                TextRect.center = ((display_width / 2), 450)
                main_screen.blit(TextSurf, TextRect)



                menu = pygame.draw.rect(main_screen, dark_green, (540, 500, 100, 60))
                mouse = pygame.mouse.get_pos()
                click = pygame.mouse.get_pressed()

                if 540 + 100 > mouse[0] > 540 and 500 + 60 > mouse[1] > 280:
                    pygame.draw.rect(main_screen, green, (540, 500, 100, 60))
                    if click[0] == 1:
                        intro_screen()
                else:
                    pygame.draw.rect(main_screen, dark_green, (540, 500, 100, 60))

                button_description = pygame.font.Font("AutourOne-Regular.otf", 20)
                textSurf, textRect = text_objects(("Menu"), button_description)
                textRect.center = ((540 + (100 / 2)), (500 + (60 / 2)))
                main_screen.blit(textSurf, textRect)

        pygame.display.update()





intro_screen()
pregame_screen()
game_screen()
informacje_screen()
wyswietlanie_tabeli()
pygame.quit()
quit()
